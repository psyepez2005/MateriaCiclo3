[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.10.5 (Oracle Corporation Java 22)
[debug] Load.defaultLoad until apply took 125.4101ms
[debug]           Load.loadUnit: plugins took 103.3343ms
[debug]           Load.loadUnit: defsScala took 0.5503ms
[debug] [Loading] Scanning directory Z:\classe5\project
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in Z:\classe5\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 18.6624 ms
[debug]               Load.resolveProject(classe5-build) took 49.6104ms
[debug]             Load.loadTransitive: finalizeProject(Project(id classe5-build, base: Z:\classe5\project, plugins: List(<none>))) took 99.6648ms
[debug] [Loading] Done in Z:\classe5\project, returning: (classe5-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 127.2227ms
[debug]           Load.loadUnit: cleanEvalClasses took 0.166ms
[debug]         Load.loadUnit(file:/Z:/classe5/project/, ...) took 238.5205ms
[debug]       Load.apply: load took 455.2335ms
[debug]       Load.apply: resolveProjects took 6.7275ms
[debug]       Load.apply: finalTransforms took 64.5066ms
[debug]       Load.apply: config.delegates took 8.9997ms
[debug]       Load.apply: Def.make(settings)... took 491.3308ms
[debug]       Load.apply: structureIndex took 125.037ms
[debug]       Load.apply: mkStreams took 2.0943ms
[info] loading project definition from Z:\classe5\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 11072.8707ms
[debug]     Load.loadUnit: defsScala took 0.0043ms
[debug] [Loading] Scanning directory Z:\classe5
[debug]       Load.loadUnit: mkEval took 6.3881ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.3383 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 2.1235ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: Z:\classe5, plugins: List(<none>))) took 4.4078ms
[debug] [Loading] Done in Z:\classe5, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 2706.7227ms
[debug]     Load.loadUnit: cleanEvalClasses took 9.4562ms
[debug]   Load.loadUnit(file:/Z:/classe5/, ...) took 13790.7989ms
[debug] Load.apply: load took 13817.0532ms
[debug] Load.apply: resolveProjects took 0.0864ms
[debug] Load.apply: finalTransforms took 8.1689ms
[debug] Load.apply: config.delegates took 0.3291ms
[debug] Load.apply: Def.make(settings)... took 92.3095ms
[debug] Load.apply: structureIndex took 35.5955ms
[debug] Load.apply: mkStreams took 0.0022ms
[info] set current project to classe5 (in build file:/Z:/classe5/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(shell, None, None)
[info] sbt server started at local:sbt-server-02987a1d8168918dc78e
[debug] Writing bsp connection file
[info] started sbt server
