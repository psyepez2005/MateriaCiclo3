[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.10.5 (Oracle Corporation Java 22)
[debug] Load.defaultLoad until apply took 63.9644ms
[debug]           Load.loadUnit: plugins took 79.6115ms
[debug]           Load.loadUnit: defsScala took 0.2902ms
[debug] [Loading] Scanning directory Z:\semana7\project
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in Z:\semana7\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 18.8159 ms
[debug]               Load.resolveProject(semana7-build) took 46.123ms
[debug]             Load.loadTransitive: finalizeProject(Project(id semana7-build, base: Z:\semana7\project, plugins: List(<none>))) took 89.3513ms
[debug] [Loading] Done in Z:\semana7\project, returning: (semana7-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 108.4061ms
[debug]           Load.loadUnit: cleanEvalClasses took 0.2077ms
[debug]         Load.loadUnit(file:/Z:/semana7/project/, ...) took 194.0031ms
[debug]       Load.apply: load took 1124.7506ms
[debug]       Load.apply: resolveProjects took 5.9532ms
[debug]       Load.apply: finalTransforms took 56.0965ms
[debug]       Load.apply: config.delegates took 4.9577ms
[debug]       Load.apply: Def.make(settings)... took 345.0535ms
[debug]       Load.apply: structureIndex took 87.2493ms
[debug]       Load.apply: mkStreams took 1.3849ms
[info] loading project definition from Z:\semana7\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 6798.2908ms
[debug]     Load.loadUnit: defsScala took 0.0025ms
[debug] [Loading] Scanning directory Z:\semana7
[debug]       Load.loadUnit: mkEval took 4.2487ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.1928 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 2.3751ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: Z:\semana7, plugins: List(<none>))) took 4.3371ms
[debug] [Loading] Done in Z:\semana7, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 1864.0651ms
[debug]     Load.loadUnit: cleanEvalClasses took 6.8709ms
[debug]   Load.loadUnit(file:/Z:/semana7/, ...) took 8670.3708ms
[debug] Load.apply: load took 8685.4706ms
[debug] Load.apply: resolveProjects took 0.3243ms
[debug] Load.apply: finalTransforms took 7.7289ms
[debug] Load.apply: config.delegates took 0.275ms
[debug] Load.apply: Def.make(settings)... took 54.732ms
[debug] Load.apply: structureIndex took 19.6136ms
[debug] Load.apply: mkStreams took 0.0023ms
[info] set current project to semana7 (in build file:/Z:/semana7/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(shell, None, None)
[info] sbt server started at local:sbt-server-193a6cb136eef6290ab3
[debug] Writing bsp connection file
[info] started sbt server
