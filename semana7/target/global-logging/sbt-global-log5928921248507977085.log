[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.10.5 (Oracle Corporation Java 22)
[debug] Load.defaultLoad until apply took 276.7896ms
[debug]           Load.loadUnit: plugins took 83.7505ms
[debug]           Load.loadUnit: defsScala took 0.251ms
[debug] [Loading] Scanning directory Z:\semana7\project
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in Z:\semana7\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 39.7412 ms
[debug]               Load.resolveProject(semana7-build) took 58.0036ms
[debug]             Load.loadTransitive: finalizeProject(Project(id semana7-build, base: Z:\semana7\project, plugins: List(<none>))) took 123.4349ms
[debug] [Loading] Done in Z:\semana7\project, returning: (semana7-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 147.9811ms
[debug]           Load.loadUnit: cleanEvalClasses took 0.2735ms
[debug]         Load.loadUnit(file:/Z:/semana7/project/, ...) took 238.313ms
[debug]       Load.apply: load took 488.7516ms
[debug]       Load.apply: resolveProjects took 11.4119ms
[debug]       Load.apply: finalTransforms took 124.6574ms
[debug]       Load.apply: config.delegates took 20.4813ms
[debug]       Load.apply: Def.make(settings)... took 622.6743ms
[debug]       Load.apply: structureIndex took 218.6703ms
[debug]       Load.apply: mkStreams took 1.9618ms
[info] loading project definition from Z:\semana7\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 3251.0895ms
[debug]     Load.loadUnit: defsScala took 0.0089ms
[debug] [Loading] Scanning directory Z:\semana7
[debug]       Load.loadUnit: mkEval took 7.7526ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 3.5127 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 5.2821ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: Z:\semana7, plugins: List(<none>))) took 10.6151ms
[debug] [Loading] Done in Z:\semana7, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 240.3539ms
[debug]     Load.loadUnit: cleanEvalClasses took 17.8973ms
[debug]   Load.loadUnit(file:/Z:/semana7/, ...) took 3512.1705ms
[debug] Load.apply: load took 3543.5677ms
[debug] Load.apply: resolveProjects took 0.1786ms
[debug] Load.apply: finalTransforms took 12.9637ms
[debug] Load.apply: config.delegates took 0.4479ms
[debug] Load.apply: Def.make(settings)... took 99.7658ms
[debug] Load.apply: structureIndex took 33.2717ms
[debug] Load.apply: mkStreams took 0.0037ms
[info] set current project to semana7 (in build file:/Z:/semana7/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(shell, None, None)
[info] sbt server started at local:sbt-server-193a6cb136eef6290ab3
[debug] Writing bsp connection file
[info] started sbt server
